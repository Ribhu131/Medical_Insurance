# -*- coding: utf-8 -*-
"""Medical_Insurance_EDA.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1OSgU9GaRDfFnv0GMLIj8O1r6nEJAynHN
"""

import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
import warnings
warnings.filterwarnings('ignore')

from google.colab import drive
drive.mount('/content/drive')

"""### **Importing The Data Set**"""

df=pd.read_csv('/content/drive/MyDrive/Medicalpremium.csv')

"""### **Looking at the top 5 records**"""

df.head()

"""### **Looking at the Shape of the Dataset**"""

print('Number of rows in the dataset',df.shape[0])
print('Number of columns in the dataset',df.shape[1])

"""### **Information of the Dataset**"""

df.info()

"""**Observation:**

**I Observe that there are 11 colummns and 986 records**

**Data type for all the Variables are integer but Diabetes, BloodPressureProblems, AnyTransplants, AnyChronicDiseases, KnownAllergies, HistoryOfCancerInFamily, NumberOfMajorSurgeries are Actualy object variables**
"""

#Updating the  datatype for object variable

for i in df[['Diabetes', 'BloodPressureProblems', 'AnyTransplants', 'AnyChronicDiseases', 'KnownAllergies', 'HistoryOfCancerInFamily', 'NumberOfMajorSurgeries']] : 
     df[i]=df[i].astype('object')

df.info()

# We Observe that the data type has been updated.

"""### **Checking for Null Values**"""

df.isnull().sum()

"""###We observe that there are no Null Values in the Dataset.**

### **Checking for Duplicate values**
"""

dups=df.duplicated()
print('Number of duplicate records',dups.sum())

# Seprating the object and numeric variable
cat = []
num = []
for i in df.columns:
    if df[i].dtype=='object':
        cat.append(i)
    else:
        num.append(i)

num,cat

"""### **Summary of Numeric Data**"""

df[num].describe().T

"""**Observations: 1. Minimum Age of User is 18 years and Maximum Age is 66 years where Average Age is 42 years 2. Minimum Height of the User 145 and Maximum Height is 188 and Average Height is 168. 3. Minimum Weight of the User 51 and Maximum Weight is 132 and Average Weight is 77. 4. Minimum Premium Price that User Pays is 15000 and Maximum Premium Price is 40000 while the Average Premium price is 24337.We observe that the Standard deviation is very large for Premium Price.**"""



"""### **Summary of Object Data**"""

df[cat].describe().T

"""### **Looking at the Unique values**"""

for i in df[cat]:
    print(i ,df[i].nunique())
    print(df[i].value_counts())
    print('************************************************')

"""### **Checking for Outliers**"""

for i in df[num]:
    fig, axes = plt.subplots(nrows=1,ncols=2,figsize=(8,4))
    sns.histplot(df[i],kde=True,ax=axes[0],color='red')
    sns.boxplot(df[i],ax=axes[1],color='green')

"""### **We observe that there are Outliers in the Dataset.**

## **Univariate Analysis**
"""

f,ax=plt.subplots(2,2,figsize=(15,15))
df.Age.plot.hist(bins = 20, edgecolor = 'black',color = 'green',ax=ax[0][0])
ax[0][0].set_title('Distribution of age among users')

df.PremiumPrice.plot.hist(bins = 25, edgecolor = 'black',color = 'pink',ax=ax[0][1])
ax[0][1].set_title('Distribution of PremiumPrice of users')

df.Height.plot.hist(bins = 25, edgecolor = 'black',color = 'red',ax=ax[1][0])
ax[1][0].set_title('Distribution of Height of users')

df.Weight.plot.hist(bins = 25, edgecolor = 'black',color = 'violet',ax=ax[1][1])
ax[1][1].set_title('Distribution of Weight of users')

print('Distribution of Age')
print('Oldest User was of:',round(df['Age'].max()),'Years')
print('Youngest User was of:',round(df['Age'].min()),'Years')
print('Average Use age:',round(df['Age'].mean()),'Years')
print('**************************************************')

print('Distribution of Premium Price')
print('lowest Premium of a User was of:',round(df['PremiumPrice'].max()))
print('Youngest User was of:',round(df['PremiumPrice'].min()))
print('Average User Premium Price:',round(df['PremiumPrice'].mean()))
print('**************************************************')

print('Distribution of Height')
print('shortest Height of a User was of:',round(df['Height'].max()))
print('tallest User was of:',round(df['Height'].min()))
print('Average Height of  User:',round(df['Height'].mean()))
print('**************************************************')

f,ax=plt.subplots(2,3,figsize=(10,10))
df['Diabetes'].value_counts().plot.pie(explode=[0,0.1],autopct='%1.1f%%',ax=ax[0][0])
df['AnyTransplants'].value_counts().plot.pie(explode=[0,0.1],autopct='%1.1f%%',ax=ax[0][1])
df['AnyChronicDiseases'].value_counts().plot.pie(explode=[0,0.1],autopct='%1.1f%%',ax=ax[0][2])
df['KnownAllergies'].value_counts().plot.pie(explode=[0,0.1],autopct='%1.1f%%',ax=ax[1][0])
df['HistoryOfCancerInFamily'].value_counts().plot.pie(explode=[0,0.1],autopct='%1.1f%%',ax=ax[1][1])
df['NumberOfMajorSurgeries'].value_counts().plot.pie(explode=[0,0,0,0],autopct='%1.1f%%',ax=ax[1][2])

"""## **Multivariate Analysis**

### **Relation between Age and Premium Price**
"""

sns.lineplot(df['Age'],df['PremiumPrice'])
sns.lmplot(x='Age', y ='PremiumPrice',data=df)

print('Oldest User was of:',round(df['Age'].max()),'Years')
print('Youngest User was of:',round(df['Age'].min()),'Years')
print('Average User age:',round(df['Age'].mean()),'Years')

"""**We observe that as Age increases Premium also increases, The same can be confirmed from the lm plot that there is positive relation between the Age and Premium Price. We also observe some Anomalies which might be due to some ither factors. With age as it is believed that with the rising age, chances of health problems also rise and thatâ€™s why accordingly the premium amount also increases**

### **Relation between Weight and Premium Price**
"""

sns.lineplot(df['Weight'],df['PremiumPrice'])
sns.lmplot(x='Weight', y ='PremiumPrice',data=df)

"""**life insurance rates are typically higher if you're overweight or obese, since insurers take into account your weight and height when setting premiums.We Observe that the Premium realy fuctuates with weight as we observe some Users with lot of weight pay high premium but alsoo there are Users with lot of weight but are paying less premium. Overall looking at the regression plot we can say that there is some positive relation between the Premium Price and Weight. If we have more data we might get to see a clearer picture. or there might be some other factors influencing the abnormilty. As per the Industry Trends Premium Prices are typically higher if you're overweight or obese, since insurers take into account your weight and height when setting premiums.**

### **Relation between Height and Premium Price**
"""

sns.lineplot(df['Height'],df['PremiumPrice'])
sns.lmplot(x='Height', y ='PremiumPrice',data=df)

"""**Although we observe that there is very litte to no relation between Height and Premium the litter relation might be because Height is a factor in BMI calculation and BMI is consider while setting Premiums**

### **Relation between Number Of Major Surgeries and Premium Price**
"""

f,ax=plt.subplots(1,2,figsize=(15,5))
sns.barplot(data = df, x='NumberOfMajorSurgeries',y='PremiumPrice',ax=ax[0])
sns.boxplot(data = df, x='NumberOfMajorSurgeries',y='PremiumPrice',ax=ax[1])

"""**Observation: As the Number of Surgeries increases Premium Price also increases Although the diference is not Significant**

### **Relation between History Of Cancer In Family and Premium Price**
"""

f,ax=plt.subplots(1,2,figsize=(15,5))
sns.barplot(data = df, x='HistoryOfCancerInFamily',y='PremiumPrice',ax=ax[0])
sns.boxplot(data = df, x='HistoryOfCancerInFamily',y='PremiumPrice',ax=ax[1])

"""**Observation: Users with History of Cancer in Family tend to pay higher Premium Price than the Users who don't.**

### **Relation between Known Allergies In Family and Premium Price**
"""

f,ax=plt.subplots(1,2,figsize=(15,5))
sns.barplot(data = df, x='KnownAllergies',y='PremiumPrice',ax=ax[0])
sns.boxplot(data = df, x='KnownAllergies',y='PremiumPrice',ax=ax[1])

"""**Observation: We observe that there is not Much difference in the Premium Price with respect to Users with Known Allergies or NO Allergies**

### **Relation between Any Chronic Diseases In Family and Premium Price**
"""

f,ax=plt.subplots(1,2,figsize=(15,5))
sns.barplot(data = df, x='AnyChronicDiseases',y='PremiumPrice',ax=ax[0])
sns.boxplot(data = df, x='AnyChronicDiseases',y='PremiumPrice',ax=ax[1])

"""**Observations: We Observe that Users' with Any Chronic Diseases pau higher Premium Price**

### **Relation between Any Transplants In Family and Premium Price**
"""

f,ax=plt.subplots(1,2,figsize=(15,5))
sns.barplot(data = df, x='AnyTransplants',y='PremiumPrice',ax=ax[0])
sns.boxplot(data = df, x='AnyTransplants',y='PremiumPrice',ax=ax[1])

"""**Observation: Users' with Any Transplant Pay Higer Premium Price.**

### **Relation between Diabetes In Family and Premium Price.**
"""

f,ax=plt.subplots(1,2,figsize=(15,5))
sns.barplot(data = df, x='Diabetes',y='PremiumPrice',ax=ax[0])
sns.boxplot(data = df, x='Diabetes',y='PremiumPrice',ax=ax[1])

"""**Observation: We Observe that median Premium Price for Users' with Diabetes his Higher than Users' without Diabetes But, There are also Users' without Diabetes Pay Much Higher Premium**

### **Relation between Blood Pressure Problems In Family and Premium Price**
"""

f,ax=plt.subplots(1,2,figsize=(15,5))
sns.barplot(data = df, x='BloodPressureProblems',y='PremiumPrice',ax=ax[0])
sns.boxplot(data = df, x='BloodPressureProblems',y='PremiumPrice',ax=ax[1])

"""**Observation: We Observe that median Premium Price for Users' with Blood Pressure Problems his Higher than Users' without Blood Pressure Problems But, There are also Users' without Blood Pressure Problems Pay Much Higher Premium.**

### **Analyze the Premium Price by age according to the History Of Cancer In Family**
"""

sns.lmplot(x = 'Age', y = 'PremiumPrice', data=df, hue='HistoryOfCancerInFamily', palette='Set1')

"""**Observation: 1. With increase in Age Users' with History of Cancer in Family Pay higher than Users' with no History of Cancer in Family. 2. The difference in the Premium Price for Younger Users' with History of Cancer in Family and the Users' Without is much lower at Longer Age and bigger for Older Users'**

### Analyze the Premium Price by age according to the **Diabetes**
"""

sns.lmplot(x = 'Age', y = 'PremiumPrice', data=df, hue='Diabetes', palette='Set2')

"""**Observation: 1. We Observe that for Younger Users' there is not much differnce in Premium Price for the users with Diabetes and Without Diabestes. 2. With increase in Age Users' with Diabetes Pay Overall Lower Premium than Users' with no Diabetes**

### **Analyze the Premium Price by age according to the Any Transplants**
"""

sns.lmplot(x = 'Age', y = 'PremiumPrice', data=df, hue='AnyTransplants', palette='Set1')

"""**Observation: Users' with Any Transplant pay higher Premium Price for any age**

### **Analyze the Premium Price by age according to the Any Any Chronic Diseases**
"""

sns.lmplot(x = 'Age', y = 'PremiumPrice', data=df, hue='AnyChronicDiseases', palette='Set2')

"""**Observation: 1. Users with Any Chronic Disease pay higher Premium Price than Users' with no Chronic Disease. 2. Younger Users with Chronic Disease pay much higher than younger Users with No Chronic as compared to Older Users' with and Without Any Chronic Disease**

### **Analyze the Premium Price by age according to the Any Known Allergies.**
"""

sns.lmplot(x = 'Age', y = 'PremiumPrice', data=df, hue='KnownAllergies', palette='Set1')

"""**Observation: 1. We Observe that for Younger Users' there is not much differnce in Premium Price for the users with Known Allergies and with no Known Allergies. 2. With increase in Age Users' with Known Allergies Pay Overall Lower Premium than Users' with no Known Allergies**

### **Analyze the Premium Price by age according to the Number Of Major Surgeries.**
"""

sns.lmplot(x = 'Age', y = 'PremiumPrice', data=df, hue='NumberOfMajorSurgeries')

"""**We Observe that the Number of Users' with 2/3 major Surgeries are very few and they tend to be older and also pay higher Premium Price., thus we can conclude the Positive relation.**

### **Analyze the Premium Price by age according to the Blood Pressure Problems.**
"""

sns.lmplot(x = 'Age', y = 'PremiumPrice', data=df, hue='BloodPressureProblems', palette='Set1')

"""**Observation: 1. We Observe that for Younger Users' there is much differnce in Premium Price for the users with Blood Pressure Problems and with no Known Allergies. 2. With increase in Age Users' with Blood Pressure Problems Pay Overall Lower Premium than Users' with no Blood Pressure Problems.**

### **Pair Plot and Correlation Heatmap**
"""

sns.pairplot(df,corner=True)

sns.heatmap(df.corr(),annot=True,cmap='cool')

"""**Observation: We Observe that there is strong correlation Between Age and Premium Price**"""

df.columns

"""# **Conclusion**

## **Based on the above observation factors that play an important role in determining the premium of the user are:**

1.  **Age**
2.  **AnyTransplants**
3.  **AnyChronicDiseases**
4.  **Weight**
5.  **HistoryOfCancerInFamily** 
6.  **NumberOfMajorSurgeries**
7.  **Height**

We also Observe that below factors have insignificant or no Impact on the Premium Price:

1. **KnownAllergies**
 2. **BloodPressure Problems**
 3. **Diabetes**

**We further try and look at the important features using machine learning in this case we use Random forest.**

### **Dependent and Independent Features**
"""

X = df.drop('PremiumPrice',axis=1)
y = df.PremiumPrice

"""### **Normalization**
Normalization scales each input variable separately to the range 0-1
"""

scalar =  StandardScaler()
X.Age = scalar.fit_transform(X[['Age']])
X.Height = scalar.fit_transform(X[['Height']])
X.Weight = scalar.fit_transform(X[['Weight']])

"""**Train Test Split**"""

# Splitting the Dataset into 75 :25
X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.25,random_state=43)

"""### **Modeling Using Random Forest Regressor**"""

#A random forest is a meta estimator that fits a number of decision tree classifiers on various sub-samples of the dataset 
# and uses averaging to improve the predictive accuracy and control over-fitting

Lr=RandomForestRegressor(n_estimators= 50,max_depth=5)
Lr_model=Lr.fit(X_train,y_train)

print('Accuracy of the model on training Dataset ',Lr_model.score(X_train,y_train))
print ('Accuracy of the model on Test Dataset ',Lr_model.score(X_test,y_test))

"""### **Finding Important Features**"""

#Using the Feature importance to Extract the Importance of the Features.
feature_imp = Lr_model.feature_importances_
sns.barplot(x=feature_imp, y=X.columns)
plt.xlabel('Importance Score')
plt.ylabel('Features')
plt.title("Important Features")
plt.show();

"""### **We Perform Random Forest and further identify Important factors that determine Premium Prices.**

As we can see in the above plot we observe that.


*   Age is the most important Factor folowed by AnyTransplant, Weight and other.
*   KnownAllergies,Diabetes, BloodPressureProblems are the least important Factor in determining the Premium Price.


*   We can get better and more forcing results if we had more data for our Analysis.





"""

